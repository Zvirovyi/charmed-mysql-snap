name: charmed-mysql
base: core22
version: '8.0.39'
summary: MySQL server in a snap.
description: |
  The MySQL software delivers a very fast, multithreaded, multi-user,
  and robust SQL (Structured Query Language) database server. MySQL
  Server is intended for mission-critical, heavy-load production
  systems as well as for embedding into mass-deployed software.

architectures:
  - build-on: [amd64]
    build-for: [amd64]
  - build-on: [arm64]
    build-for: [arm64]
grade: stable
confinement: strict
license: Apache-2.0

system-usernames:
  snap_daemon: shared

package-repositories:
  - type: apt
    ppa: data-platform/mysql-shell
  - type: apt
    ppa: data-platform/xtrabackup
  - type: apt
    ppa: data-platform/mysqld-exporter
  - type: apt
    ppa: data-platform/mysqlrouter-exporter

layout:
  /var/lib/mysql-files:
    bind: $SNAP_COMMON/var/lib/mysql-files
  /usr/lib/mysqlrouter:
    symlink: $SNAP/usr/lib/mysqlrouter
  /usr/lib/mysql-router:
    symlink: $SNAP/usr/lib/mysql-router
  /etc/mysqlrouter:
    symlink: $SNAP_DATA/etc/mysqlrouter
  /var/lib/mysqlrouter:
    symlink: $SNAP_DATA/var/lib/mysqlrouter
  /var/log/mysqlrouter:
    symlink: $SNAP_COMMON/var/log/mysqlrouter
  /var/log/mysqlsh:
    bind: $SNAP_COMMON/var/log/mysqlsh
  /usr/lib/mysqlsh:
    bind: $SNAP/lib/mysqlsh

hooks:
  install:
    plugs:
      - network
      - network-bind
  configure:
    plugs:
      - network

slots:
  logs:
    interface: content
    source:
      read:
        - $SNAP_COMMON/var/log/mysql
        - $SNAP_COMMON/var/log/mysqlrouter
  mysqlrouter-sockets:
    interface: content
    content: socket-directory
    write:
      - $SNAP_COMMON/run/mysqlrouter

apps:
  mysql:
    command: usr/bin/mysql
    plugs:
      - network
  mysqld:
    command: start-mysqld.sh
    daemon: simple
    install-mode: disable
    plugs:
      - network
      - network-bind
  mysqlsh:
    command: run-mysqlsh.sh
    plugs:
      - network
  mysqlrouter:
    command: run-mysql-router.sh
    plugs:
      - network
  mysqlrouter-service:
    command: start-mysql-router.sh
    daemon: simple
    install-mode: disable
    plugs:
      - network
      - network-bind
  xtrabackup:
    command: usr/bin/xtrabackup
  xbcloud:
    command: usr/bin/xbcloud
    plugs:
      - network
  xbstream:
    command: usr/bin/xbstream
  mysqld-exporter:
    command: start-mysqld-exporter.sh
    daemon: simple
    install-mode: disable
    plugs:
      - network
      - network-bind
  mysqlrouter-exporter:
    command: start-mysql-router-exporter.sh
    daemon: simple
    install-mode: disable
    plugs:
      - network
      - network-bind
  mysqlrouter-passwd:
    command: run-mysql-router-password.sh

parts:
  packages-deb:
    plugin: nil
    stage-packages:
      - mysql-server-8.0=8.0.39-0ubuntu0.22.04.1
      - mysql-router=8.0.39-0ubuntu0.22.04.1
      - mysql-shell=8.0.37+dfsg-0ubuntu0.22.04.1~ppa3
      - prometheus-mysqld-exporter=0.14.0-0ubuntu0.22.04.1~ppa2
      - prometheus-mysqlrouter-exporter=5.0.1-0ubuntu0.22.04.1~ppa1
      - percona-xtrabackup=8.0.35-31-0ubuntu0.22.04.1~ppa3
      - util-linux
    organize:
      usr/share/doc/mysql-server-8.0/copyright: licenses/COPYRIGHT-mysql-server-8.0
      usr/share/doc/mysql-router/LICENSE.router.gz: licenses/LICENSE-mysql-router
      usr/share/doc/mysqlsh/LICENSE.gz: licenses/LICENSE-mysql-shell
      usr/share/doc/prometheus-mysqld-exporter/copyright: licenses/COPYRIGHT-prometheus-mysqld-exporter
      usr/share/doc/prometheus-mysqlrouter-exporter/copyright: licenses/COPYRIGHT-prometheus-mysqlrouter-exporter
      usr/share/doc/percona-xtrabackup/LICENSE.gz: licenses/LICENSE-percona-xtrabackup
      usr/share/doc/util-linux/copyright: licenses/COPYRIGHT-util-linux
  audit-plugin:
    plugin: nil
    after: [packages-deb]
    build-packages:
      - rpm
    build-environment:
      - VERSION: 8.0.36-28
      - BASE_AMD64: Percona-Server-${VERSION}-Linux.x86_64.glibc2.35.tar.gz
      - BASE_ARM64: percona-server-server-${VERSION}.1.el9.aarch64.rpm
      - DIR_URL: https://downloads.percona.com/downloads/Percona-Server-8.0/Percona-Server-${VERSION}/binary
      - PATH_AMD64: tarball
      - PATH_ARM64: redhat/9/aarch64
      - LICENSE_URL: https://raw.githubusercontent.com/percona/percona-server/8.0/LICENSE
    override-pull: |
      if [ "${CRAFT_ARCH_BUILD_FOR}" = "arm64" ]; then
        URL=${DIR_URL}/${PATH_ARM64}/${BASE_ARM64}
        curl -o file.rpm "${URL}"
        # output a file.rpm.tgz
        rpm2archive file.rpm
        tar -xf file.rpm.tgz --strip-components 4 --wildcards --no-anchored '*audit_log*.so*'
      else
        URL=${DIR_URL}/${PATH_AMD64}/${BASE_AMD64}
        curl -o file.tar.gz "${URL}"
        tar -xf  file.tar.gz --strip-components 2 --wildcards --no-anchored '*audit_log*.so*'
      fi
      curl -o LICENSE "${LICENSE_URL}"
    override-prime: |
      cp ${SNAPCRAFT_PART_BUILD}/plugin/*.so ${SNAPCRAFT_PRIME}/usr/lib/mysql/plugin/
      cp ${SNAPCRAFT_PART_BUILD}/LICENSE ${SNAPCRAFT_PRIME}/licenses/LICENSE-audit-plugin
  snap-license:
    plugin: dump
    source: .
    source-type: local
    stage:
      - licenses/LICENSE-snap
    organize:
      LICENSE: licenses/LICENSE-snap
  snap-scripts:
    plugin: dump
    source: snap/local
